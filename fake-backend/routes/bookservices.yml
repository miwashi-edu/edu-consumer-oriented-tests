openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: API to manage book information
servers:
  - url: 'http://localhost:3000'
tags:
  - name: Books
    description: API to manage books
components:
  schemas:
    Book:
      type: object
      required:
        - id
        - title
        - author
      properties:
        id:
          type: integer
          description: The auto-generated id of the book
        title:
          type: string
          description: The book title
        author:
          type: string
          description: The book author
      example:
        id: 1
        title: Example Book
        author: Author Name
paths:
  /books:
    get:
      summary: Lists all books
      tags: [Books]
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Creates a book
      tags: [Books]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: The created book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{bookId}:
    get:
      summary: Retrieves the book based on their ID
      tags: [Books]
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Updates a book by their ID
      tags: [Books]
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: The updated book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Deletes a book based on their ID
      tags: [Books]
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: The deleted book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

